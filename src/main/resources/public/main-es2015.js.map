{"version":3,"sources":["./src/app/http-interceptors/index.ts","./src/app/components/cart-details/cart-details.component.ts","./src/app/components/cart-details/cart-details.component.html","./src/app/common/order.ts","./src/environments/environment.ts","./src/app/common/purchase.ts","./src/app/common/user.ts","./src/app/services/product.service.ts","./src/app/services/luv2-shop-form.service.ts","./src/app/services/order-history.service.ts","./src/app/common/cart-item.ts","./src/app/http-interceptors/auth-interceptor.ts","./src/app/components/checkout/checkout.component.ts","./src/app/components/checkout/checkout.component.html","./src/app/components/search/search.component.ts","./src/app/components/search/search.component.html","./src/app/services/checkout.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/guards/auth.guard.ts","./src/app/common/product.ts","./src/app/common/order-item.ts","./src/app/components/cart-status/cart-status.component.ts","./src/app/components/cart-status/cart-status.component.html","./src/app/app.module.ts","./src/app/components/product-category-menu/product-category-menu.component.html","./src/app/components/product-category-menu/product-category-menu.component.ts","./src/app/components/product-details/product-details.component.ts","./src/app/components/product-details/product-details.component.html","./src/app/components/product-list/product-list.component.ts","./src/app/components/product-list/product-list.component.html","./src/app/services/cart.service.ts","./src/app/components/success/success.component.ts","./src/app/components/success/success.component.html","./src/app/services/stripe-service.ts","./src/app/common/token.ts","./src/app/components/login-status/login-status.component.ts","./src/app/components/login-status/login-status.component.html","./src/app/services/auth.service.ts","./src/app/components/canceled/canceled.component.ts","./src/app/components/canceled/canceled.component.html","./src/app/components/orders/orders.component.html","./src/app/components/orders/orders.component.ts","./src/app/validators/luv2-shop-validators.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["/* \"Barrel\" of Http Interceptors */\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { AuthInterceptor } from './auth-interceptor';\r\n\r\n/** Http interceptor providers in outside-in order */\r\nexport const httpInterceptorProviders = [\r\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\r\n];","import { Component, OnInit } from '@angular/core';\nimport { CartItem } from 'src/app/common/cart-item';\nimport { OrderItem } from 'src/app/common/order-item';\nimport { Purchase } from 'src/app/common/purchase';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { CartService } from 'src/app/services/cart.service';\nimport { StripeService } from 'src/app/services/stripe-service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-cart-details',\n  templateUrl: './cart-details.component.html',\n  styleUrls: ['./cart-details.component.css'],\n})\nexport class CartDetailsComponent implements OnInit {\n  cartItems: CartItem[] = [];\n  totalPrice: number = 0;\n  totalQuantity: number = 0;\n  isAuthenticated: boolean = false;\n  loading: boolean = false;\n\n  private guestPurchaseUrl: string =\n    environment.API_URL + '/checkout/create-checkout-session';\n\n  constructor(\n    private cartService: CartService,\n    private authService: AuthService,\n    private stripeService: StripeService\n  ) {}\n\n  ngOnInit(): void {\n    this.isAuthenticated = this.authService.isAuthenticated.getValue();\n\n    this.stripeService.loading.subscribe((loading) => {\n      this.loading = loading;\n    });\n\n    this.authService.isAuthenticated.subscribe((isAuthenticated) => {\n      this.isAuthenticated = isAuthenticated;\n    });\n\n    this.listCartDetails();\n  }\n\n  checkout() {\n    const purchase: Purchase = new Purchase();\n    let orderItems: OrderItem[] = this.cartService.cartItems.map(\n      (item) => new OrderItem(item)\n    );\n    purchase.orderItems = orderItems;\n\n    this.stripeService.checkout(purchase, this.guestPurchaseUrl);\n  }\n\n  listCartDetails() {\n    this.cartItems = this.cartService.cartItems;\n\n    this.cartService.totalPrice.subscribe((data) => (this.totalPrice = data));\n\n    this.cartService.totalQuantity.subscribe(\n      (data) => (this.totalQuantity = data)\n    );\n\n    this.cartService.computeCartTotals();\n  }\n\n  incrementQuantity(cartItem: CartItem) {\n    this.cartService.addToCart(cartItem);\n  }\n\n  decrementQuantity(cartItem: CartItem) {\n    this.cartService.decrementQuantity(cartItem);\n  }\n\n  remove(cartItem: CartItem) {\n    this.cartService.remove(cartItem);\n  }\n}\n","<div class=\"main-content\">\n  <div class=\"section-content section-content-p30\">\n    <div class=\"container-fluid\">\n      <div\n        *ngIf=\"cartItems.length === 0\"\n        class=\"alert alert-warning col-md-12\"\n        role=\"alert\"\n      >\n        <h3>Your cart is empty.</h3>\n      </div>\n      <table *ngIf=\"cartItems.length > 0\" class=\"table table-bordered\">\n        <tr>\n          <th width=\"20%\">Product Image</th>\n          <th width=\"50%\">Product Detail</th>\n          <th width=\"30%\"></th>\n        </tr>\n        <tr *ngFor=\"let cartItem of cartItems\">\n          <td>\n            <img\n              src=\"{{ cartItem.imageUrl }}\"\n              class=\"img-responsive\"\n              width=\"150px\"\n            />\n          </td>\n          <td>\n            <p>{{ cartItem.name }}</p>\n            <p>{{ cartItem.description }}</p>\n            <p>{{ cartItem.unitPrice | currency: \"USD\" }}</p>\n          </td>\n          <td>\n            <div class=\"items mb-2\">\n              <label>Quantity</label>\n              <div class=\"row no-gutters\">\n                <div>\n                  <button\n                    (click)=\"decrementQuantity(cartItem)\"\n                    class=\"btn btn-secondary btn-sm\"\n                  >\n                    <i class=\"fa fa-minus\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n\n                <div class=\"mx-3\">\n                  {{ cartItem.quantity }}\n                </div>\n\n                <div>\n                  <button\n                    (click)=\"incrementQuantity(cartItem)\"\n                    class=\"btn btn-secondary btn-sm\"\n                  >\n                    <i class=\"fa fa-plus\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n            <p>\n              Sub-total\n              {{ cartItem.quantity * cartItem.unitPrice | currency: \"USD\" }}\n            </p>\n            <button (click)=\"remove(cartItem)\" class=\"primary-btn\">\n              Remove\n            </button>\n          </td>\n        </tr>\n        <tr>\n          <td colspan=\"2\"></td>\n          <td>\n            <b>Total Quantity: {{ totalQuantity }}</b>\n            <p>Shipping FREE</p>\n            <b>Total Price: {{ totalPrice | currency: \"USD\" }}</b\n            ><br />\n            <a\n              *ngIf=\"isAuthenticated\"\n              routerLink=\"/checkout\"\n              class=\"primary-btn mt-3\"\n              >Proceed Checkout</a\n            >\n            <button\n              *ngIf=\"!isAuthenticated\"\n              [disabled]=\"loading\"\n              class=\"primary-btn mt-3\"\n              id=\"checkout-button\"\n              (click)=\"checkout()\"\n            >\n              {{ loading ? \"Please wait\" : \"Checkout as Guest\" }}\n            </button>\n          </td>\n        </tr>\n      </table>\n    </div>\n  </div>\n</div>\n","export class Order {\n    totalQuantity!: number;\n    totalPrice!: number;\n}\n","export const environment = {\n  production: false,\n  API_URL: 'http://localhost:8080/api',\n  STRIPE_KEY: 'pk_test_2MCK2bbELvdA3QNUXcRsXY3b',\n};\n","import { Address } from \"./address\";\nimport { Customer } from \"./customer\";\nimport { Order } from \"./order\";\nimport { OrderItem } from \"./order-item\";\n\nexport class Purchase {\n    customer!: Customer;\n    shippingAddress!: Address;\n    billingAddress!: Address;\n    order!: Order;\n    orderItems!: OrderItem[];\n}\n","import { Token } from \"./token\";\n\nexport class User {\n    id: string;\n    email: string;\n    name: string;\n    token: Token;\n\n    constructor(id:string, email:string, name:string, token:Token) {\n        this.id = id;\n        this.email = email;\n        this.name = name;\n        this.token = token;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Product } from '../common/product';\nimport { ProductCategory } from '../common/product-category';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductService {\n  private baseUrl: string = environment.API_URL;\n\n  constructor(private httpClient: HttpClient) {}\n\n  getProductListPaginate(\n    page: number,\n    pageSize: number,\n    categoryId: number\n  ): Observable<GetResponseProducts> {\n    const searchUrl: string = `${this.baseUrl}/products/search/findByProductCategoryId?id=${categoryId}&page=${page}&size=${pageSize}`;\n    return this.httpClient.get<GetResponseProducts>(searchUrl);\n  }\n\n  getProductList(categoryId: number): Observable<GetResponseProducts> {\n    const searchUrl: string = `${this.baseUrl}/products/search/findByProductCategoryId?id=${categoryId}`;\n    return this.httpClient.get<GetResponseProducts>(searchUrl);\n  }\n\n  getProductCategories(): Observable<GetResponseProductCategory> {\n    const categoryUrl: string = `${this.baseUrl}/product-category`;\n    return this.httpClient.get<GetResponseProductCategory>(categoryUrl);\n  }\n\n  searchProducts(keyword: string): Observable<GetResponseProducts> {\n    const searchUrl: string = `${this.baseUrl}/products/search/findProductByNameContaining?name=${keyword}`;\n    return this.httpClient.get<GetResponseProducts>(searchUrl);\n  }\n\n  searchProductPaginate(\n    page: number,\n    pageSize: number,\n    keyword: string\n  ): Observable<GetResponseProducts> {\n    const searchUrl: string = `${this.baseUrl}/products/search/findProductByNameContaining?name=${keyword}&page=${page}&size=${pageSize}`;\n    return this.httpClient.get<GetResponseProducts>(searchUrl);\n  }\n\n  getProduct(id: number): Observable<Product> {\n    const productUrl: string = `${this.baseUrl}/products/${id}`;\n    return this.httpClient.get<Product>(productUrl);\n  }\n}\n\nexport interface GetResponseProducts {\n  _embedded: {\n    products: Product[];\n  };\n  page: {\n    size: number;\n    totalElements: number;\n    totalPages: number;\n    number: number;\n  };\n}\n\ninterface GetResponseProductCategory {\n  _embedded: {\n    productCategory: ProductCategory[];\n  };\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Country } from '../common/country';\nimport { State } from '../common/state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class Luv2ShopFormService {\n  private countriesUrl = environment.API_URL + '/countries';\n  private statesUrl = environment.API_URL + '/states';\n\n  constructor(private httpClient: HttpClient) {}\n\n  getCountries(): Observable<GetResponseCountries> {\n    return this.httpClient.get<GetResponseCountries>(this.countriesUrl);\n  }\n\n  getStates(countryCode: string): Observable<GetResponseStates> {\n    const searchUrl =\n      this.statesUrl + '/search/findByCountryCode?code=' + countryCode;\n    return this.httpClient.get<GetResponseStates>(searchUrl);\n  }\n}\n\ninterface GetResponseCountries {\n  _embedded: {\n    countries: Country[];\n  };\n}\n\ninterface GetResponseStates {\n  _embedded: {\n    states: State[];\n  };\n}\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { OrderHistory } from '../common/order-history';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderHistoryService {\n  private ordersUrl: string = environment.API_URL + '/orders/findByEmail';\n  errorMsg: Subject<string> = new Subject<string>();\n\n  constructor(private httpClient: HttpClient) {}\n\n  getOrderHistory(): Observable<OrderHistory[]> {\n    return this.httpClient\n      .get<OrderHistory[]>(this.ordersUrl)\n      .pipe(catchError(this.handleError));\n  }\n\n  private handleError = (error: HttpErrorResponse) => {\n    this.errorMsg.next(error.error.message);\n\n    return throwError(error.error.message);\n  };\n}\n","import { Product } from \"./product\";\n\nexport class CartItem {\n    id: number;\n    name: string;\n    description: string;\n    imageUrl: string;\n    unitPrice: number;\n    quantity: number;\n\n    constructor(product: Product) {\n        this.id = product.id;\n        this.name = product.name;\n        this.description = product.description;\n        this.imageUrl = product.imageUrl;\n        this.unitPrice = product.unitPrice;\n        this.quantity = 1;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService) {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    // Get the auth token from the service.\n    const authToken = this.authService.authToken;\n\n    if (authToken != null) {\n      const authReq = request.clone({\n        headers: request.headers.set('Authorization', authToken),\n      });\n\n      return next.handle(authReq);\n    }\n\n    return next.handle(request);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { CartItem } from 'src/app/common/cart-item';\nimport { Country } from 'src/app/common/country';\nimport { Order } from 'src/app/common/order';\nimport { OrderItem } from 'src/app/common/order-item';\nimport { Purchase } from 'src/app/common/purchase';\nimport { State } from 'src/app/common/state';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { CartService } from 'src/app/services/cart.service';\nimport { CheckoutService } from 'src/app/services/checkout.service';\nimport { Luv2ShopFormService } from 'src/app/services/luv2-shop-form.service';\nimport { StripeService } from 'src/app/services/stripe-service';\nimport { Luv2ShopValidators } from 'src/app/validators/luv2-shop-validators';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.css'],\n})\nexport class CheckoutComponent implements OnInit {\n  checkoutFormGroup!: FormGroup;\n  totalPrice: number = 0;\n  totalQuantity: number = 0;\n  countries: Country[] = [];\n  shippingAddressStates: State[] = [];\n  billingAddressStates: State[] = [];\n  storage: Storage = localStorage;\n\n  isAuthenticated: boolean = false;\n  loading: boolean = false;\n\n  private purchaseUrl: string = environment.API_URL + '/checkout/purchase';\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private cartService: CartService,\n    private luv2ShopFormService: Luv2ShopFormService,\n    private checkoutService: CheckoutService,\n    private authService: AuthService,\n    private stripeService: StripeService\n  ) {}\n\n  ngOnInit(): void {\n    this.isAuthenticated = this.authService.isAuthenticated.getValue();\n\n    this.stripeService.loading.subscribe((loading) => {\n      this.loading = loading;\n    });\n\n    this.authService.isAuthenticated.subscribe((isAuthenticated) => {\n      this.isAuthenticated = isAuthenticated;\n      if (isAuthenticated) {\n        this.getCustomerInfo();\n      }\n    });\n\n    this.checkoutFormGroup = this.formBuilder.group({\n      customer: this.formBuilder.group({\n        firstName: new FormControl('', [\n          Validators.required,\n          Validators.minLength(2),\n          Luv2ShopValidators.notOnlyWhitespace,\n          Luv2ShopValidators.notOnlyWhitespaceWithOneLetter,\n        ]),\n        lastName: new FormControl('', [\n          Validators.required,\n          Validators.minLength(2),\n          Luv2ShopValidators.notOnlyWhitespace,\n          Luv2ShopValidators.notOnlyWhitespaceWithOneLetter,\n        ]),\n      }),\n      shippingAddress: this.formBuilder.group({\n        street: new FormControl('', [\n          Validators.required,\n          Validators.minLength(2),\n          Luv2ShopValidators.notOnlyWhitespace,\n          Luv2ShopValidators.notOnlyWhitespaceWithOneLetter,\n        ]),\n        city: new FormControl('', [\n          Validators.required,\n          Validators.minLength(2),\n          Luv2ShopValidators.notOnlyWhitespace,\n          Luv2ShopValidators.notOnlyWhitespaceWithOneLetter,\n        ]),\n        state: new FormControl('', [\n          Validators.required,\n          Luv2ShopValidators.notOnlyWhitespace,\n        ]),\n        country: new FormControl('', [\n          Validators.required,\n          Luv2ShopValidators.notOnlyWhitespace,\n        ]),\n        zipCode: new FormControl('', [\n          Validators.required,\n          Validators.minLength(2),\n          Luv2ShopValidators.notOnlyWhitespace,\n          Luv2ShopValidators.notOnlyWhitespaceWithOneLetter,\n        ]),\n      }),\n      billingAddress: this.formBuilder.group({\n        street: new FormControl('', [\n          Validators.required,\n          Validators.minLength(2),\n          Luv2ShopValidators.notOnlyWhitespace,\n          Luv2ShopValidators.notOnlyWhitespaceWithOneLetter,\n        ]),\n        city: new FormControl('', [\n          Validators.required,\n          Validators.minLength(2),\n          Luv2ShopValidators.notOnlyWhitespace,\n          Luv2ShopValidators.notOnlyWhitespaceWithOneLetter,\n        ]),\n        state: new FormControl('', [\n          Validators.required,\n          Luv2ShopValidators.notOnlyWhitespace,\n        ]),\n        country: new FormControl('', [\n          Validators.required,\n          Luv2ShopValidators.notOnlyWhitespace,\n        ]),\n        zipCode: new FormControl('', [\n          Validators.required,\n          Validators.minLength(2),\n          Luv2ShopValidators.notOnlyWhitespace,\n          Luv2ShopValidators.notOnlyWhitespaceWithOneLetter,\n        ]),\n      }),\n    });\n\n    const startMonth: number = new Date().getMonth() + 1;\n\n    this.luv2ShopFormService.getCountries().subscribe((data) => {\n      this.countries = data._embedded.countries;\n    });\n\n    this.setCartTotals();\n  }\n\n  setCartTotals() {\n    this.cartService.totalPrice.subscribe(\n      (totalPrice) => (this.totalPrice = totalPrice)\n    );\n    this.cartService.totalQuantity.subscribe(\n      (totalQuantity) => (this.totalQuantity = totalQuantity)\n    );\n  }\n\n  onSubmit() {\n    if (this.checkoutFormGroup.invalid) {\n      this.checkoutFormGroup.markAllAsTouched();\n      return;\n    }\n\n    const cartItems: CartItem[] = this.cartService.cartItems;\n\n    let order: Order = new Order();\n    order.totalPrice = this.totalPrice;\n    order.totalQuantity = this.totalQuantity;\n\n    let orderItems: OrderItem[] = cartItems.map((item) => new OrderItem(item));\n\n    let purchase: Purchase = new Purchase();\n\n    purchase.customer = this.checkoutFormGroup.controls['customer'].value;\n\n    purchase.shippingAddress =\n      this.checkoutFormGroup.controls['shippingAddress'].value;\n    const shippingState: State = JSON.parse(\n      JSON.stringify(purchase.shippingAddress.state)\n    );\n    const shippingCountry: Country = JSON.parse(\n      JSON.stringify(purchase.shippingAddress.country)\n    );\n    purchase.shippingAddress.state = shippingState.name;\n    purchase.shippingAddress.country = shippingCountry.name;\n\n    purchase.billingAddress =\n      this.checkoutFormGroup.controls['billingAddress'].value;\n    const billingState: State = JSON.parse(\n      JSON.stringify(purchase.billingAddress.state)\n    );\n    const billingCountry: Country = JSON.parse(\n      JSON.stringify(purchase.billingAddress.country)\n    );\n    purchase.billingAddress.state = billingState.name;\n    purchase.billingAddress.country = billingCountry.name;\n\n    purchase.order = order;\n    purchase.orderItems = orderItems;\n\n    this.stripeService.checkout(purchase, this.purchaseUrl);\n  }\n\n  handleMonthsAndYears() {\n    const creditCardFormGroup = this.checkoutFormGroup.get('creditCard');\n\n    const currentYear: number = new Date().getFullYear();\n    const selectedYear: number = Number(\n      creditCardFormGroup?.value.expirationYear\n    );\n\n    let startMonth: number;\n\n    if (currentYear === selectedYear) {\n      startMonth = new Date().getMonth() + 1;\n    } else {\n      startMonth = 1;\n    }\n  }\n\n  copyShippingAddressToBillingAddress(event: Event) {\n    if (event.target !== null) {\n      const checkBox: HTMLInputElement = event.target as HTMLInputElement;\n\n      if (checkBox.checked) {\n        this.checkoutFormGroup.controls.billingAddress.setValue(\n          this.checkoutFormGroup.controls.shippingAddress.value\n        );\n        this.billingAddressStates = this.shippingAddressStates;\n      } else {\n        this.checkoutFormGroup.controls.billingAddress.reset();\n        this.billingAddressStates = [];\n      }\n    }\n  }\n\n  get firstName() {\n    return this.checkoutFormGroup.get('customer.firstName');\n  }\n  get lastName() {\n    return this.checkoutFormGroup.get('customer.lastName');\n  }\n\n  get shippingAddressStreet() {\n    return this.checkoutFormGroup.get('shippingAddress.street');\n  }\n  get shippingAddressCity() {\n    return this.checkoutFormGroup.get('shippingAddress.city');\n  }\n  get shippingAddressState() {\n    return this.checkoutFormGroup.get('shippingAddress.state');\n  }\n  get shippingAddressCountry() {\n    return this.checkoutFormGroup.get('shippingAddress.country');\n  }\n  get shippingAddressZipCode() {\n    return this.checkoutFormGroup.get('shippingAddress.zipCode');\n  }\n\n  get billingAddressStreet() {\n    return this.checkoutFormGroup.get('billingAddress.street');\n  }\n  get billingAddressCity() {\n    return this.checkoutFormGroup.get('billingAddress.city');\n  }\n  get billingAddressState() {\n    return this.checkoutFormGroup.get('billingAddress.state');\n  }\n  get billingAddressCountry() {\n    return this.checkoutFormGroup.get('billingAddress.country');\n  }\n  get billingAddressZipCode() {\n    return this.checkoutFormGroup.get('billingAddress.zipCode');\n  }\n\n  get cardType() {\n    return this.checkoutFormGroup.get('creditCard.cardType');\n  }\n  get nameOnCard() {\n    return this.checkoutFormGroup.get('creditCard.nameOnCard');\n  }\n  get cardNumber() {\n    return this.checkoutFormGroup.get('creditCard.cardNumber');\n  }\n  get securityCode() {\n    return this.checkoutFormGroup.get('creditCard.securityCode');\n  }\n  get expirationMonth() {\n    return this.checkoutFormGroup.get('creditCard.expirationMonth');\n  }\n  get expirationYear() {\n    return this.checkoutFormGroup.get('creditCard.expirationYear');\n  }\n\n  getStates(formGroupName: string) {\n    const formGroup = this.checkoutFormGroup.get(formGroupName);\n    const countryCode = formGroup?.value.country.code;\n\n    this.luv2ShopFormService.getStates(countryCode).subscribe((data) => {\n      let states: State[] = data._embedded.states;\n\n      if (formGroupName === 'shippingAddress') {\n        this.shippingAddressStates = states;\n      } else {\n        this.billingAddressStates = states;\n      }\n\n      formGroup?.get('state')?.setValue(states[0]);\n    });\n  }\n\n  getCustomerInfo() {\n    this.checkoutService.getCustomerInfo().subscribe((customerInfo) => {\n      this.checkoutFormGroup\n        .get('customer')\n        ?.get('firstName')\n        ?.setValue(customerInfo.firstName);\n      this.checkoutFormGroup\n        .get('customer')\n        ?.get('lastName')\n        ?.setValue(customerInfo.lastName);\n\n      this.checkoutFormGroup\n        .get('shippingAddress')\n        ?.get('street')\n        ?.setValue(customerInfo.shippingAddress.street);\n      this.checkoutFormGroup\n        .get('shippingAddress')\n        ?.get('city')\n        ?.setValue(customerInfo.shippingAddress.city);\n      this.checkoutFormGroup\n        .get('shippingAddress')\n        ?.get('zipCode')\n        ?.setValue(customerInfo.shippingAddress.zipCode);\n\n      this.checkoutFormGroup\n        .get('billingAddress')\n        ?.get('street')\n        ?.setValue(customerInfo.billingAddress.street);\n      this.checkoutFormGroup\n        .get('billingAddress')\n        ?.get('city')\n        ?.setValue(customerInfo.billingAddress.city);\n      this.checkoutFormGroup\n        .get('billingAddress')\n        ?.get('zipCode')\n        ?.setValue(customerInfo.billingAddress.zipCode);\n    });\n  }\n}\n","<div class=\"main-content page-m\">\n  <div class=\"section-content section-content-p30 e-spc\">\n    <div\n      *ngIf=\"!isAuthenticated\"\n      class=\"alert alert-warning mt-5 col-md-12\"\n      role=\"alert\"\n    >\n      <h3>You must be log in to check out.</h3>\n      <p>Log out and log back in if your browser has been idle for awhile.</p>\n    </div>\n\n    <form\n      *ngIf=\"isAuthenticated\"\n      [formGroup]=\"checkoutFormGroup\"\n      (ngSubmit)=\"onSubmit()\"\n      class=\"container-fluid\"\n    >\n      <!-- Customer Details -->\n      <div formGroupName=\"customer\" class=\"form-area\">\n        <h3>Customer</h3>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <div class=\"input-space\">\n              <input\n                formControlName=\"firstName\"\n                type=\"text\"\n                placeholder=\"First Name\"\n              />\n              <div\n                class=\"alert alert-danger mt-1\"\n                *ngIf=\"\n                  firstName!.invalid && (firstName!.dirty || firstName!.touched)\n                \"\n              >\n                <div\n                  *ngIf=\"\n                    firstName!.errors!.notOnlyWhitespace ||\n                    firstName!.errors!.required\n                  \"\n                >\n                  First name is required\n                </div>\n                <div\n                  *ngIf=\"\n                    firstName!.errors!.minlength ||\n                    firstName!.errors!.notOnlyWhitespaceWithOneLetter\n                  \"\n                >\n                  First name must be at least 2 characters long\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"col-md-6\">\n            <div class=\"input-space\">\n              <input\n                formControlName=\"lastName\"\n                type=\"text\"\n                placeholder=\"Last Name\"\n              />\n\n              <div\n                class=\"alert alert-danger mt-1\"\n                *ngIf=\"\n                  lastName!.invalid && (lastName!.dirty || lastName!.touched)\n                \"\n              >\n                <div\n                  *ngIf=\"\n                    lastName!.errors!.required ||\n                    lastName?.errors?.notOnlyWhitespace\n                  \"\n                >\n                  Last name is required\n                </div>\n                <div\n                  *ngIf=\"\n                    lastName!.errors!.minlength ||\n                    lastName!.errors!.notOnlyWhitespaceWithOneLetter\n                  \"\n                >\n                  Last name must be at least 2 characters long\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Shipping Address Details -->\n      <div formGroupName=\"shippingAddress\" class=\"form-area\">\n        <h3>Shipping Address</h3>\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <div class=\"input-space\">\n              <input\n                formControlName=\"street\"\n                type=\"text\"\n                placeholder=\"Street\"\n              />\n\n              <div\n                class=\"alert alert-danger mt-1\"\n                *ngIf=\"\n                  shippingAddressStreet!.invalid &&\n                  (shippingAddressStreet!.dirty ||\n                    shippingAddressStreet!.touched)\n                \"\n              >\n                <div\n                  *ngIf=\"\n                    shippingAddressStreet!.errors!.required ||\n                    shippingAddressStreet?.errors?.notOnlyWhitespace\n                  \"\n                >\n                  Street name is required\n                </div>\n                <div\n                  *ngIf=\"\n                    shippingAddressStreet!.errors!.minlength ||\n                    shippingAddressStreet!.errors!\n                      .notOnlyWhitespaceWithOneLetter\n                  \"\n                >\n                  Street name must be at least 2 characters long\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"col-md-12\">\n            <div class=\"input-space\">\n              <input formControlName=\"city\" type=\"text\" placeholder=\"City\" />\n\n              <div\n                class=\"alert alert-danger mt-1\"\n                *ngIf=\"\n                  shippingAddressCity!.invalid &&\n                  (shippingAddressCity!.dirty || shippingAddressCity!.touched)\n                \"\n              >\n                <div\n                  *ngIf=\"\n                    shippingAddressCity!.errors!.required ||\n                    shippingAddressCity?.errors?.notOnlyWhitespace\n                  \"\n                >\n                  City name is required\n                </div>\n                <div\n                  *ngIf=\"\n                    shippingAddressCity!.errors!.minlength ||\n                    shippingAddressCity!.errors!.notOnlyWhitespaceWithOneLetter\n                  \"\n                >\n                  City name must be at least 2 characters long\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"col-md-12\">\n            <div class=\"input-space\">\n              <label\n                style=\"margin-bottom: 5px; padding-left: 10px\"\n                for=\"country\"\n                >Country</label\n              >\n              <select\n                id=\"country\"\n                formControlName=\"country\"\n                (change)=\"getStates('shippingAddress')\"\n              >\n                <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n                  {{ country.name }}\n                </option>\n              </select>\n\n              <div\n                class=\"alert alert-danger mt-1\"\n                *ngIf=\"\n                  shippingAddressCountry!.invalid &&\n                  (shippingAddressCountry!.dirty ||\n                    shippingAddressCountry!.touched)\n                \"\n              >\n                <div\n                  *ngIf=\"\n                    shippingAddressCountry!.errors!.required ||\n                    shippingAddressCountry?.errors?.notOnlyWhitespace\n                  \"\n                >\n                  Country name is required\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"col-md-12\">\n            <div class=\"input-space\">\n              <label\n                style=\"margin-bottom: 5px; padding-left: 10px\"\n                for=\"shippingState\"\n                >State / Province</label\n              >\n\n              <select id=\"shippingState\" formControlName=\"state\">\n                <option\n                  *ngFor=\"let state of shippingAddressStates\"\n                  [ngValue]=\"state\"\n                >\n                  {{ state.name }}\n                </option>\n              </select>\n\n              <div\n                class=\"alert alert-danger mt-1\"\n                *ngIf=\"\n                  shippingAddressState!.invalid &&\n                  (shippingAddressState!.dirty || shippingAddressState!.touched)\n                \"\n              >\n                <div\n                  *ngIf=\"\n                    shippingAddressState!.errors!.required ||\n                    shippingAddressState?.errors?.notOnlyWhitespace\n                  \"\n                >\n                  State name is required\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"col-md-12\">\n            <div class=\"input-space\">\n              <input\n                formControlName=\"zipCode\"\n                type=\"text\"\n                placeholder=\"Zip Code / Postal Code\"\n              />\n\n              <div\n                class=\"alert alert-danger mt-1\"\n                *ngIf=\"\n                  shippingAddressZipCode!.invalid &&\n                  (shippingAddressZipCode!.dirty ||\n                    shippingAddressZipCode!.touched)\n                \"\n              >\n                <div\n                  *ngIf=\"\n                    shippingAddressZipCode!.errors!.required ||\n                    shippingAddressZipCode?.errors?.notOnlyWhitespace\n                  \"\n                >\n                  Zip Code is required\n                </div>\n                <div\n                  *ngIf=\"\n                    shippingAddressZipCode!.errors!.minlength ||\n                    shippingAddressZipCode!.errors!\n                      .notOnlyWhitespaceWithOneLetter\n                  \"\n                >\n                  Zip Code must be at least 2 characters long\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- BILLING SAME AS SHIPPING ADDRESS CHECKBOX -->\n      <div class=\"input-space\">\n        <label class=\"au-checkbox\">\n          <input\n            type=\"checkbox\"\n            (change)=\"copyShippingAddressToBillingAddress($event)\"\n          />\n          <span class=\"au-checkmark\"></span> Bill Address same as Shipping\n          Adress\n        </label>\n      </div>\n\n      <!-- Billing Address Details -->\n      <div formGroupName=\"billingAddress\" class=\"form-area\">\n        <h3>Billing Address</h3>\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <div class=\"input-space\">\n              <input\n                formControlName=\"street\"\n                type=\"text\"\n                placeholder=\"Street\"\n              />\n\n              <div\n                class=\"alert alert-danger mt-1\"\n                *ngIf=\"\n                  billingAddressStreet!.invalid &&\n                  (billingAddressStreet!.dirty || billingAddressStreet!.touched)\n                \"\n              >\n                <div\n                  *ngIf=\"\n                    billingAddressStreet!.errors!.required ||\n                    billingAddressStreet?.errors?.notOnlyWhitespace\n                  \"\n                >\n                  Street name is required\n                </div>\n                <div\n                  *ngIf=\"\n                    billingAddressStreet!.errors!.minlength ||\n                    billingAddressStreet!.errors!.notOnlyWhitespaceWithOneLetter\n                  \"\n                >\n                  Street name must be at least 2 characters long\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"col-md-12\">\n            <div class=\"input-space\">\n              <input formControlName=\"city\" type=\"text\" placeholder=\"City\" />\n\n              <div\n                class=\"alert alert-danger mt-1\"\n                *ngIf=\"\n                  billingAddressCity!.invalid &&\n                  (billingAddressCity!.dirty || billingAddressCity!.touched)\n                \"\n              >\n                <div\n                  *ngIf=\"\n                    billingAddressCity!.errors!.required ||\n                    billingAddressCity?.errors?.notOnlyWhitespace\n                  \"\n                >\n                  City name is required\n                </div>\n                <div\n                  *ngIf=\"\n                    billingAddressCity!.errors!.minlength ||\n                    billingAddressCity!.errors!.notOnlyWhitespaceWithOneLetter\n                  \"\n                >\n                  City name must be at least 2 characters long\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"col-md-12\">\n            <div class=\"input-space\">\n              <label\n                style=\"margin-bottom: 5px; padding-left: 10px\"\n                for=\"country-billing\"\n                >Country</label\n              >\n              <select\n                id=\"country-billing\"\n                formControlName=\"country\"\n                (change)=\"getStates('billingAddress')\"\n              >\n                <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n                  {{ country.name }}\n                </option>\n              </select>\n\n              <div\n                class=\"alert alert-danger mt-1\"\n                *ngIf=\"\n                  billingAddressCountry!.invalid &&\n                  (billingAddressCountry!.dirty ||\n                    billingAddressCountry!.touched)\n                \"\n              >\n                <div\n                  *ngIf=\"\n                    billingAddressCountry!.errors!.required ||\n                    billingAddressCountry?.errors?.notOnlyWhitespace\n                  \"\n                >\n                  Country name is required\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"col-md-12\">\n            <div class=\"input-space\">\n              <label\n                style=\"margin-bottom: 5px; padding-left: 10px\"\n                for=\"billingState\"\n                >State / Province</label\n              >\n              <select id=\"billingState\" formControlName=\"state\">\n                <option\n                  *ngFor=\"let state of billingAddressStates\"\n                  [ngValue]=\"state\"\n                >\n                  {{ state.name }}\n                </option>\n              </select>\n\n              <div\n                class=\"alert alert-danger mt-1\"\n                *ngIf=\"\n                  billingAddressState!.invalid &&\n                  (billingAddressState!.dirty || billingAddressState!.touched)\n                \"\n              >\n                <div\n                  *ngIf=\"\n                    billingAddressState!.errors!.required ||\n                    billingAddressState?.errors?.notOnlyWhitespace\n                  \"\n                >\n                  State name is required\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"col-md-12\">\n            <div class=\"input-space\">\n              <input\n                formControlName=\"zipCode\"\n                type=\"text\"\n                placeholder=\"Zip Code / Postal Code\"\n              />\n\n              <div\n                class=\"alert alert-danger mt-1\"\n                *ngIf=\"\n                  billingAddressZipCode!.invalid &&\n                  (billingAddressZipCode!.dirty ||\n                    billingAddressZipCode!.touched)\n                \"\n              >\n                <div\n                  *ngIf=\"\n                    billingAddressZipCode!.errors!.required ||\n                    billingAddressZipCode?.errors?.notOnlyWhitespace\n                  \"\n                >\n                  Zip Code is required\n                </div>\n                <div\n                  *ngIf=\"\n                    billingAddressZipCode!.errors!.minlength ||\n                    billingAddressZipCode!.errors!\n                      .notOnlyWhitespaceWithOneLetter\n                  \"\n                >\n                  Zip Code must be at least 2 characters long\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-area\">\n        <h3>Review Your Order</h3>\n        <b>Total Quantity: {{ totalQuantity }}</b>\n        <h4 class=\"my-2\">Shipping: FREE</h4>\n        <B>Total Price: {{ totalPrice | currency: \"USD\" }}</B>\n      </div>\n      <div class=\"text-center\">\n        <button\n          [disabled]=\"loading\"\n          type=\"submit\"\n          class=\"btn btn-info\"\n          id=\"submit\"\n        >\n          {{ loading ? \"Please wait\" : \"Checkout\" }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n\n<!-- <div formGroupName=\"creditCard\" class=\"form-area\">\n  <h3>Credit Card</h3>\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <div class=\"input-space\">\n        <label\n          style=\"margin-bottom: 5px; padding-left: 10px\"\n          for=\"cardType\"\n          >Card Type</label\n        >\n        <select id=\"cardType\" formControlName=\"cardType\">\n          <option>Visa</option>\n          <option>MasterCard</option>\n        </select>\n\n        <div\n          class=\"alert alert-danger mt-1\"\n          *ngIf=\"\n            cardType!.invalid && (cardType!.dirty || cardType!.touched)\n          \"\n        >\n          <div\n            *ngIf=\"\n              cardType!.errors!.required ||\n              cardType?.errors?.notOnlyWhitespace\n            \"\n          >\n            Card Type is required\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-md-12\">\n      <div class=\"input-space\">\n        <input\n          formControlName=\"nameOnCard\"\n          type=\"text\"\n          placeholder=\"Name on card\"\n        />\n\n        <div\n          class=\"alert alert-danger mt-1\"\n          *ngIf=\"\n            nameOnCard!.invalid &&\n            (nameOnCard!.dirty || nameOnCard!.touched)\n          \"\n        >\n          <div\n            *ngIf=\"\n              nameOnCard!.errors!.required ||\n              nameOnCard?.errors?.notOnlyWhitespace\n            \"\n          >\n            Name on Card is required\n          </div>\n          <div\n            *ngIf=\"\n              nameOnCard!.errors!.minlength ||\n              nameOnCard!.errors!.notOnlyWhitespaceWithOneLetter\n            \"\n          >\n            Name on Card must be at least 2 characters long\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"clearfix\"></div>\n    <div class=\"col-md-8\">\n      <div class=\"input-space\">\n        <input\n          formControlName=\"cardNumber\"\n          type=\"text\"\n          placeholder=\"Card number\"\n        />\n\n        <div\n          class=\"alert alert-danger mt-1\"\n          *ngIf=\"\n            cardNumber!.invalid &&\n            (cardNumber!.dirty || cardNumber!.touched)\n          \"\n        >\n          <div *ngIf=\"cardNumber!.errors!.required\">\n            Card Number is required\n          </div>\n          <div *ngIf=\"cardNumber!.errors!.pattern\">\n            Must be a valid Card format\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-md-4\">\n      <div class=\"input-space\">\n        <input\n          formControlName=\"securityCode\"\n          type=\"text\"\n          placeholder=\"CVV2 number\"\n        />\n\n        <div\n          class=\"alert alert-danger mt-1\"\n          *ngIf=\"\n            securityCode!.invalid &&\n            (securityCode!.dirty || securityCode!.touched)\n          \"\n        >\n          <div *ngIf=\"securityCode!.errors!.required\">\n            CW2 is required\n          </div>\n          <div *ngIf=\"securityCode!.errors!.pattern\">\n            Must be a valid CW2 format\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"clearfix\"></div>\n\n    <div class=\"col-md-2\">\n      <label class=\"date\">Expiration Date</label>\n    </div>\n    <div class=\"col-md-5\">\n      <div class=\"input-space\">\n        <label style=\"margin-bottom: 5px; padding-left: 10px\" for=\"month\"\n          >Month</label\n        >\n        <select id=\"month\" formControlName=\"expirationMonth\">\n          <option\n            *ngFor=\"let month of creditCardMonths\"\n            value=\"{{ month.numberValue }}\"\n          >\n            {{ month.stringValue }}\n          </option>\n        </select>\n\n        <div\n          class=\"alert alert-danger mt-1\"\n          *ngIf=\"\n            expirationMonth!.invalid &&\n            (expirationMonth!.dirty || expirationMonth!.touched)\n          \"\n        >\n          <div\n            *ngIf=\"\n              expirationMonth!.errors!.required ||\n              expirationMonth?.errors?.notOnlyWhitespace\n            \"\n          >\n            Expiration Month is required\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-md-5\">\n      <div class=\"input-space\">\n        <label style=\"margin-bottom: 5px; padding-left: 10px\" for=\"year\"\n          >Year</label\n        >\n        <select\n          id=\"year\"\n          formControlName=\"expirationYear\"\n          (change)=\"handleMonthsAndYears()\"\n        >\n          <option *ngFor=\"let year of creditCardYears\" value=\"{{ year }}\">\n            {{ year }}\n          </option>\n        </select>\n\n        <div\n          class=\"alert alert-danger mt-1\"\n          *ngIf=\"\n            expirationYear!.invalid &&\n            (expirationYear!.dirty || expirationYear!.touched)\n          \"\n        >\n          <div\n            *ngIf=\"\n              expirationYear!.errors!.required ||\n              expirationYear?.errors?.notOnlyWhitespace\n            \"\n          >\n            Expiration Year is required\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div> -->\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css'],\n})\nexport class SearchComponent implements OnInit {\n  constructor(private router: Router) {}\n\n  ngOnInit(): void {}\n\n  doSearch(value: string) {\n    this.router.navigateByUrl(`search/${value}`);\n  }\n}\n","<div class=\"form-header\">\n  <input\n    #myInput\n    class=\"au-input au-input-xl\"\n    type=\"text\"\n    placeholder=\"Search for products ...\"\n    (keyup.enter)=\"doSearch(myInput.value)\"\n  />\n  <button (click)=\"doSearch(myInput.value)\" class=\"au-btn-submit\" type=\"button\">\n    Search\n  </button>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { CustomerInfo } from '../common/customer-info';\nimport { Purchase } from '../common/purchase';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutService {\n  private purchaseUrl: string = environment.API_URL + '/checkout/purchase';\n\n  constructor(private httpClient: HttpClient) {}\n\n  placeOrder(purchase: Purchase): Observable<any> {\n    return this.httpClient.post<Purchase>(this.purchaseUrl, purchase);\n  }\n\n  createCheckOutSession(\n    purchase: Purchase,\n    url: string\n  ): Observable<GetStripeId> {\n    return this.httpClient.post<GetStripeId>(url, purchase);\n  }\n\n  getCustomerInfo(): Observable<CustomerInfo> {\n    return this.httpClient.get<CustomerInfo>(this.purchaseUrl);\n  }\n}\n\ninterface GetStripeId {\n  id: string;\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-ecommerce';\n}\n","<div class=\"page-wrapper\">\n  <!-- MENU SIDEBAR-->\n  <aside class=\"menu-sidebar d-none d-lg-block\">\n    <div class=\"logo\">\n      <a routerLink=\"/\">\n        <img\n          src=\"assets/images/logo.png\"\n          alt=\"luv2shop\"\n          class=\"img-responsive\"\n        />\n      </a>\n    </div>\n\n    <!-- MENU SIDEBAR -->\n    <app-product-category-menu></app-product-category-menu>\n  </aside>\n  <!-- END MENU SIDEBAR-->\n\n  <!-- PAGE CONTAINER-->\n  <div class=\"page-container\">\n    <!-- HEADER DESKTOP-->\n    <header class=\"header-desktop\">\n      <div class=\"section-content section-content-p30\">\n        <div class=\"container-fluid\">\n          <div class=\"header-wrap\">\n            <!-- SEARCH COMPONENT -->\n            <app-search></app-search>\n            <!-- LOGIN STATUS COMPONENT -->\n            <app-login-status></app-login-status>\n            <!-- CART STATUS -->\n            <app-cart-status></app-cart-status>\n          </div>\n          <div class=\"account-wrap\"></div>\n        </div>\n      </div>\n    </header>\n    <!-- END HEADER DESKTOP-->\n\n    <!-- MAIN CONTENT -->\n    <router-outlet></router-outlet>\n  </div>\n  <!-- END OF PAGE CONTAINER -->\n</div>\n<!-- END OF PAGE WRAPPER -->\n\n<!-- FOOTER -->\n<footer>\n  <ul>\n    <li><a href=\"#\">About Us</a></li>\n    <li><a href=\"#\">Contact Us</a></li>\n    <li><a href=\"#\">Help</a></li>\n  </ul>\n</footer>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const isAuthenticated = this.authService.isAuthenticated.getValue();\n\n    if (!isAuthenticated) {\n      this.router.navigateByUrl(\"/\");\n    }\n\n    return isAuthenticated;\n  }\n  \n}\n","export class Product {\n    id!: number;\n    sku!: string;\n    name!: string;\n    description!: string;\n    unitPrice!: number;\n    imageUrl!: string;\n    active!: boolean;\n    unitsInStock!: number;\n    dateCreated!: Date;\n    lastUpdated!: Date;\n}\n","import { CartItem } from './cart-item';\n\nexport class OrderItem {\n  imageUrl: string;\n  unitPrice: number;\n  quantity: number;\n  productId: number;\n\n  constructor(cartItem: CartItem) {\n    this.imageUrl = cartItem.imageUrl;\n    this.unitPrice = cartItem.unitPrice;\n    this.quantity = cartItem.quantity;\n    this.productId = cartItem.id;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { CartService } from 'src/app/services/cart.service';\n\n@Component({\n  selector: 'app-cart-status',\n  templateUrl: './cart-status.component.html',\n  styleUrls: ['./cart-status.component.css']\n})\nexport class CartStatusComponent implements OnInit {\n\n  totalPrice: number = 0.00;\n  totalQuantity: number = 0;\n\n  constructor(private cartService: CartService) { }\n\n  ngOnInit(): void {\n    this.updateCartStatus();\n  }\n\n  updateCartStatus() {\n    this.cartService.totalPrice.subscribe(data => this.totalPrice = data);\n    this.cartService.totalQuantity.subscribe(data => this.totalQuantity = data);\n  }\n\n}\n","<div class=\"cart-area d-n\">\n  <a routerLink=\"/cart-details\">\n    <div class=\"total\">\n      {{ totalPrice | currency: \"USD\" }} <span> {{ totalQuantity }}</span>\n    </div>\n    <i class=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i>\n  </a>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { ProductListComponent } from './components/product-list/product-list.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ProductService } from './services/product.service';\n\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProductCategoryMenuComponent } from './components/product-category-menu/product-category-menu.component';\nimport { SearchComponent } from './components/search/search.component';\nimport { ProductDetailsComponent } from './components/product-details/product-details.component';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CartStatusComponent } from './components/cart-status/cart-status.component';\nimport { CartDetailsComponent } from './components/cart-details/cart-details.component';\nimport { CheckoutComponent } from './components/checkout/checkout.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { LoginStatusComponent } from './components/login-status/login-status.component';\nimport { httpInterceptorProviders } from './http-interceptors';\nimport { OrdersComponent } from './components/orders/orders.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { SuccessComponent } from './components/success/success.component';\nimport { CanceledComponent } from './components/canceled/canceled.component';\n\nconst routes: Routes = [\n  { path: 'orders', component: OrdersComponent, canActivate: [AuthGuard] },\n  { path: 'checkout', component: CheckoutComponent },\n  { path: 'canceled', component: CanceledComponent },\n  { path: 'success', component: SuccessComponent },\n  { path: 'cart-details', component: CartDetailsComponent },\n  { path: 'products/:id', component: ProductDetailsComponent },\n  { path: 'search/:keyword', component: ProductListComponent },\n  { path: 'category/:id', component: ProductListComponent },\n  { path: 'category', component: ProductListComponent },\n  { path: '', redirectTo: '/category/1', pathMatch: 'full' },\n  { path: '**', redirectTo: '/category/1', pathMatch: 'full' },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductListComponent,\n    ProductCategoryMenuComponent,\n    SearchComponent,\n    ProductDetailsComponent,\n    CartStatusComponent,\n    CartDetailsComponent,\n    CheckoutComponent,\n    LoginStatusComponent,\n    OrdersComponent,\n    SuccessComponent,\n    CanceledComponent,\n  ],\n  imports: [\n    RouterModule.forRoot(routes, { useHash: true }),\n    BrowserModule,\n    HttpClientModule,\n    NgbModule,\n    ReactiveFormsModule,\n  ],\n  providers: [ProductService, AuthGuard, httpInterceptorProviders],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","<div class=\"menu-sidebar-content js-scrollbar1\">\n  <nav class=\"navbar-sidebar\">\n    <ul class=\"list-unstyled navbar-list\">\n      <li *ngFor=\"let category of productCategories\">\n        <a routerLink=\"category/{{ category.id }}\" routerLinkActive=\"active\">{{\n          category.categoryName\n        }}</a>\n      </li>\n    </ul>\n  </nav>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ProductCategory } from 'src/app/common/product-category';\nimport { ProductService } from 'src/app/services/product.service';\n\n@Component({\n  selector: 'app-product-category-menu',\n  templateUrl: './product-category-menu.component.html',\n  styleUrls: ['./product-category-menu.component.css']\n})\nexport class ProductCategoryMenuComponent implements OnInit {\n\n  productCategories!: ProductCategory[];\n\n  constructor(private productService: ProductService) { }\n\n  ngOnInit(): void {\n    this.listProductCategories();\n  }\n\n  listProductCategories() {\n    this.productService.getProductCategories().subscribe(response => {\n      this.productCategories = response._embedded.productCategory;\n    });\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { CartItem } from 'src/app/common/cart-item';\nimport { Product } from 'src/app/common/product';\nimport { CartService } from 'src/app/services/cart.service';\nimport { ProductService } from 'src/app/services/product.service';\n\n@Component({\n  selector: 'app-product-details',\n  templateUrl: './product-details.component.html',\n  styleUrls: ['./product-details.component.css']\n})\nexport class ProductDetailsComponent implements OnInit {\n\n  product: Product = new Product();\n\n  constructor(private productService: ProductService,\n              private cartService: CartService,\n              private location: Location,\n              private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(() => {\n      this.handleProductDetails();\n    });\n  }\n\n  handleProductDetails() {\n    let value: string|null = this.route.snapshot.paramMap.get(\"id\");\n    let id: number = 1;\n    if (value !== null) {\n      id = +value;\n    }\n\n    this.productService.getProduct(id).subscribe(product => {\n      this.product = product;\n    })\n  }\n\n  addToCart() {\n    const cartItem: CartItem = new CartItem(this.product);\n    this.cartService.addToCart(cartItem);\n  }\n\n  back() {\n    this.location.back();\n  }\n}\n","<div class=\"main-content\">\n  <div class=\"section-content section-content-p30\">\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div>\n          <img\n            src=\"{{ product.imageUrl }}\"\n            class=\"img-responsive\"\n            width=\"200px\"\n          />\n\n          <h3>{{ product.name }}</h3>\n          <div class=\"price\">{{ product.unitPrice | currency: \"USD\" }}</div>\n          <button (click)=\"addToCart()\" class=\"primary-btn\">Add to cart</button>\n\n          <h4 class=\"mt-5 mb-3\">Product Description</h4>\n          <p class=\"w-50\">\n            {{ product.description }}\n          </p>\n\n          <button (click)=\"back()\" class=\"btn btn-link\">Go Back</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CartItem } from 'src/app/common/cart-item';\nimport { Product } from 'src/app/common/product';\nimport { CartService } from 'src/app/services/cart.service';\nimport {\n  ProductService,\n  GetResponseProducts,\n} from 'src/app/services/product.service';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css'],\n})\nexport class ProductListComponent implements OnInit {\n  products: Product[] = [];\n  currentCategoryId: number = 1;\n  previousCategoryId: number = 1;\n  searchMode: boolean = false;\n  pageNumber: number = 1;\n  pageSize: number = 10;\n  totalElements: number = 0;\n  prevousKeyword: string | null = null;\n  loading: boolean = false;\n\n  constructor(\n    private productService: ProductService,\n    private cartService: CartService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.route.paramMap.subscribe(() => {\n      this.listProducts();\n    });\n  }\n\n  listProducts() {\n    this.searchMode = this.route.snapshot.paramMap.has('keyword');\n\n    if (this.searchMode) {\n      this.handleSearchProducts();\n    } else {\n      this.handleListProducts();\n    }\n  }\n\n  handleSearchProducts() {\n    const keyword: string | null = this.route.snapshot.paramMap.get('keyword');\n\n    if (keyword != null) {\n      if (this.prevousKeyword !== keyword) {\n        this.pageNumber = 1;\n      }\n\n      this.prevousKeyword = keyword;\n\n      this.productService\n        .searchProductPaginate(this.pageNumber - 1, this.pageSize, keyword)\n        .subscribe((response) => {\n          this.processResult(response);\n          this.loading = false;\n        });\n    }\n  }\n\n  handleListProducts() {\n    // check if id param is available\n    const hasCategoryId: boolean = this.route.snapshot.paramMap.has('id');\n    const id = this.route.snapshot.paramMap.get('id');\n\n    if (hasCategoryId && id != null) {\n      this.currentCategoryId = +id;\n    } else {\n      this.currentCategoryId = 1;\n    }\n\n    if (this.previousCategoryId !== this.currentCategoryId) {\n      this.pageNumber = 1;\n    }\n\n    this.previousCategoryId = this.currentCategoryId;\n\n    this.productService\n      .getProductListPaginate(\n        this.pageNumber - 1,\n        this.pageSize,\n        this.currentCategoryId\n      )\n      .subscribe((response) => {\n        this.processResult(response);\n        this.loading = false;\n      });\n  }\n\n  processResult(response: GetResponseProducts) {\n    this.products = response._embedded.products;\n    this.pageNumber = response.page.number + 1;\n    this.pageSize = response.page.size;\n    this.totalElements = response.page.totalElements;\n  }\n\n  updatePageSize(target: EventTarget | null) {\n    if (target !== null) {\n      const size: number = +(target as HTMLInputElement).value;\n      this.pageSize = size;\n      this.pageNumber = 1;\n      this.listProducts();\n    }\n  }\n\n  addToCart(product: Product) {\n    const cartItem: CartItem = new CartItem(product);\n    this.cartService.addToCart(cartItem);\n  }\n}\n","<div class=\"main-content\">\n  <div class=\"section-content section-content-p30\">\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div *ngFor=\"let product of products\" class=\"col-md-3\">\n          <div class=\"product-box\">\n            <a routerLink=\"/products/{{ product.id }}\">\n              <img\n                src=\"{{ product.imageUrl }}\"\n                alt=\"Product Image\"\n                class=\"img-responsive\"\n              />\n            </a>\n            <a routerLink=\"/products/{{ product.id }}\">\n              <h1>{{ product.name }}</h1>\n            </a>\n            <div class=\"price\">{{ product.unitPrice | currency: \"USD\" }}</div>\n            <button (click)=\"addToCart(product)\" class=\"primary-btn\">\n              Add to cart\n            </button>\n          </div>\n        </div>\n\n        <div\n          *ngIf=\"products?.length === 0\"\n          class=\"alert alert-warning col-md-12\"\n          role=\"alert\"\n        >\n          <h3 *ngIf=\"!loading\">No Products Found</h3>\n          <h3 *ngIf=\"loading\">Loading Products</h3>\n        </div>\n      </div>\n\n      <div class=\"footer-pagination\">\n        <div class=\"row\">\n          <div class=\"col-md-6\"></div>\n\n          <div class=\"col-md-6\">\n            <div class=\"row\">\n              <div>\n                <ngb-pagination\n                  [(page)]=\"pageNumber\"\n                  [pageSize]=\"pageSize\"\n                  [collectionSize]=\"totalElements\"\n                  [maxSize]=\"5\"\n                  (pageChange)=\"listProducts()\"\n                >\n                </ngb-pagination>\n              </div>\n              <div>\n                <div class=\"items d-flex flex-column ml-5\">\n                  <select\n                    id=\"itemsPerPage\"\n                    (change)=\"updatePageSize($event.target)\"\n                  >\n                    <option value=\"10\" selected>10</option>\n                    <option value=\"20\">20</option>\n                    <option value=\"30\">30</option>\n                    <option value=\"40\">40</option>\n                  </select>\n                  <label for=\"itemsPerPage\">Items per page</label>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { CartItem } from '../common/cart-item';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartService {\n  cartItems: CartItem[] = [];\n  totalPrice: BehaviorSubject<number> = new BehaviorSubject<number>(0);\n  totalQuantity: BehaviorSubject<number> = new BehaviorSubject<number>(0);\n  storage: Storage = localStorage;\n  private static EXPIRY_TIME: number = 60 * 60 * 24 * 1000;\n\n  constructor() {\n    const cartItems = this.getCartItemsWithExpiry('cartItems');\n    if (cartItems != null) {\n      this.cartItems = cartItems;\n      this.computeCartTotals();\n    }\n  }\n\n  persistCartItemsWithExpiry(ttl: number) {\n    const now = new Date();\n\n    const item = {\n      value: this.cartItems,\n      expiry: now.getTime() + ttl,\n    };\n    this.storage.setItem('cartItems', JSON.stringify(item));\n  }\n\n  getCartItemsWithExpiry(key: string) {\n    const itemStr = localStorage.getItem(key);\n\n    if (!itemStr) {\n      return null;\n    }\n    const item = JSON.parse(itemStr);\n    const now = new Date();\n\n    if (now.getTime() > item.expiry) {\n      localStorage.removeItem(key);\n      return null;\n    }\n\n    return item.value;\n  }\n\n  resetCart() {\n    this.cartItems = [];\n    this.totalPrice.next(0);\n    this.totalQuantity.next(0);\n    this.storage.removeItem('cartItems');\n  }\n\n  addToCart(cartItem: CartItem) {\n    let alreadyExistInCart: boolean = false;\n    let existingCartItem: CartItem | undefined = undefined;\n\n    if (this.cartItems.length > 0) {\n      existingCartItem = this.cartItems.find((item) => item.id === cartItem.id);\n\n      alreadyExistInCart = existingCartItem !== undefined;\n    }\n\n    if (alreadyExistInCart) {\n      ++existingCartItem!.quantity;\n    } else {\n      this.cartItems.push(cartItem);\n    }\n\n    this.computeCartTotals();\n  }\n\n  computeCartTotals() {\n    let totalPriceValue: number = 0;\n    let totalQuantityValue: number = 0;\n\n    for (let cartItem of this.cartItems) {\n      totalPriceValue += cartItem.quantity * cartItem.unitPrice;\n      totalQuantityValue += cartItem.quantity;\n    }\n\n    this.totalPrice.next(totalPriceValue);\n    this.totalQuantity.next(totalQuantityValue);\n    this.persistCartItemsWithExpiry(CartService.EXPIRY_TIME);\n  }\n\n  logCartDetails(totalPriceValue: number, totalQuantityValue: number) {\n    console.log('Contents of Cart');\n\n    for (let cartItem of this.cartItems) {\n      const subTotal: number = cartItem.quantity * cartItem.unitPrice;\n      console.log(\n        `name: ${cartItem.name} quantity: ${cartItem.quantity} unitPrice: ${cartItem.unitPrice} subTotal: ${subTotal}`\n      );\n      console.log('-------------------------');\n    }\n\n    console.log(\n      `totalPrice: ${totalPriceValue.toFixed(\n        2\n      )} totalQuantity: ${totalQuantityValue}`\n    );\n  }\n\n  decrementQuantity(cartItem: CartItem) {\n    --cartItem.quantity;\n\n    if (cartItem.quantity === 0) {\n      this.remove(cartItem);\n    } else {\n      this.computeCartTotals();\n    }\n  }\n\n  remove(cartItem: CartItem) {\n    const index: number = this.cartItems.findIndex(\n      (currCartItem) => currCartItem.id === cartItem.id\n    );\n\n    if (index > -1) {\n      this.cartItems.splice(index, 1);\n      this.computeCartTotals();\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { CartService } from 'src/app/services/cart.service';\n\n@Component({\n  selector: 'app-success',\n  templateUrl: './success.component.html',\n  styleUrls: ['./success.component.css'],\n})\nexport class SuccessComponent implements OnInit {\n  constructor(private cartService: CartService) {}\n\n  ngOnInit(): void {\n    this.cartService.resetCart();\n  }\n}\n","<div class=\"main-content\">\n  <div class=\"text-center mt-5\">\n    <h1 class=\"text-success\">\n      Your order has been place and will be shipped soon!\n    </h1>\n    <h1 class=\"text-success\">Thank You!</h1>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Purchase } from '../common/purchase';\nimport { CheckoutService } from './checkout.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StripeService {\n  private stripePromise = loadStripe(environment.STRIPE_KEY);\n  loading: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n  constructor(private checkoutService: CheckoutService) {}\n\n  checkout(purchase: Purchase, url: string) {\n    this.loading.next(true);\n    this.checkoutService.createCheckOutSession(purchase, url).subscribe({\n      next: (session) => {\n        this.redirectToStripe(session);\n      },\n      error: (error) => {\n        alert(`There was an error: ${error.error.message}`);\n        this.loading.next(false);\n      },\n    });\n  }\n\n  private async redirectToStripe(session: any) {\n    const stripe = await this.stripePromise;\n\n    if (stripe != null) {\n      let result = await stripe.redirectToCheckout({\n        sessionId: session.id,\n      });\n\n      this.loading.next(false);\n\n      if (result.error) {\n        alert(result.error.message);\n      }\n    } else {\n      alert('A error happen! Please try agian later.');\n      this.loading.next(false);\n    }\n  }\n}\n","export class Token {\n    access: string;\n    expiresAt: number;\n    expiresIn: number;\n    refresh: string;\n    type: string;\n\n    constructor(access:string, expiresAt:number, expiresIn:number, refresh:string, type:string) {\n        this.access = access;\n        this.expiresAt = expiresAt;\n        this.expiresIn = expiresIn;\n        this.refresh = refresh;\n        this.type = type;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n//@ts-ignore\nimport netlifyIdentity from 'netlify-identity-widget';\nimport { User } from 'src/app/common/user';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-login-status',\n  templateUrl: './login-status.component.html',\n  styleUrls: ['./login-status.component.css'],\n})\nexport class LoginStatusComponent implements OnInit {\n  isAuthenticated: boolean = false;\n  user!: User | null;\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  ngOnInit() {\n    this.subscrbieToAuthValues();\n\n    netlifyIdentity.on('login', (user: any) => {\n      this.handleUser(user);\n      netlifyIdentity.close();\n    });\n\n    netlifyIdentity.on('logout', () => {\n      this.authService.setUser(null);\n      this.authService.setIsAuthenticated(false);\n      if (location.pathname == '/orders') {\n        this.router.navigateByUrl('/');\n      }\n    });\n\n    netlifyIdentity.on('init', (user: any) => {\n      this.handleUser(user);\n    });\n\n    netlifyIdentity.init();\n  }\n\n  handleUser(user: any) {\n    if (user === null) {\n      this.authService.setUser(null);\n      this.authService.setIsAuthenticated(false);\n    } else {\n      this.authService.setUser(user);\n      this.authService.setIsAuthenticated(true);\n    }\n  }\n\n  subscrbieToAuthValues() {\n    this.authService.isAuthenticated.subscribe((auth) => {\n      this.isAuthenticated = auth;\n    });\n\n    this.authService.user.subscribe((user) => {\n      this.user = user;\n    });\n  }\n\n  login() {\n    netlifyIdentity.open();\n  }\n\n  logout() {\n    netlifyIdentity.logout();\n  }\n}\n","<div class=\"login-status-header\">\n  <div\n    *ngIf=\"isAuthenticated && user\"\n    class=\"login-status-user-info text-white\"\n  >\n    Welcome back {{ user.name }}\n  </div>\n\n  <button\n    *ngIf=\"!isAuthenticated\"\n    class=\"security-btn\"\n    type=\"button\"\n    (click)=\"login()\"\n  >\n    Login / Sign Up\n  </button>\n\n  <button\n    (click)=\"logout()\"\n    *ngIf=\"isAuthenticated\"\n    class=\"security-btn\"\n    type=\"button\"\n  >\n    Logout\n  </button>\n\n  <button\n    *ngIf=\"isAuthenticated\"\n    routerLink=\"/orders\"\n    class=\"security-btn ml-5\"\n    type=\"button\"\n  >\n    Orders\n  </button>\n</div>\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Token } from '../common/token';\nimport { User } from '../common/user';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  authToken: string | null = null;\n  isAuthenticated: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(\n    false\n  );\n  user: BehaviorSubject<User | null> = new BehaviorSubject<User | null>(null);\n\n  constructor() {}\n\n  setAuthToken(user: User | null) {\n    if (user != null) {\n      this.authToken = 'Bearer ' + user.token.access;\n    }\n  }\n\n  setUser(user: any) {\n    if (user === null) {\n      this.user.next(null);\n      this.authToken = null;\n    } else {\n      const theUser = this.createUser(user);\n      this.user.next(theUser);\n      this.setAuthToken(theUser);\n    }\n  }\n\n  setIsAuthenticated(state: boolean) {\n    this.isAuthenticated.next(state);\n  }\n\n  createUser(user: any): User {\n    const id: string = user.id;\n    const email: string = user.email;\n    const name: string = user.user_metadata.full_name;\n    const accessToken: string = user.token.access_token;\n    const refreshToken: string = user.token.refresh_token;\n    const tokenType: string = user.token.token_type;\n    const expiresAt: number = user.token.expires_at;\n    const expiresIn: number = user.token.expires_in;\n    const token: Token = new Token(\n      accessToken,\n      expiresAt,\n      expiresIn,\n      refreshToken,\n      tokenType\n    );\n    return new User(id, email, name, token);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-canceled',\n  templateUrl: './canceled.component.html',\n  styleUrls: ['./canceled.component.css']\n})\nexport class CanceledComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"main-content\">\n  <div class=\"text-center mt-5\">\n    <h1 class=\"text-danger\">You order was canceled!</h1>\n    <h3 class=\"text-muted\">If this was a mistake, then checkout again.</h3>\n  </div>\n</div>\n","<div class=\"main-content\">\n  <div class=\"section-content section-content-p30\">\n    <div class=\"container-fluid\">\n      <h3>Your Orders</h3>\n\n      <div *ngIf=\"orders.length > 0\">\n        <table class=\"table table-bordered\">\n          <tr>\n            <th width=\"20%\">Order Tracking Number</th>\n            <th width=\"10%\">Total Price</th>\n            <th width=\"10%\">Total Quantity</th>\n            <th width=\"10%\">Date</th>\n          </tr>\n\n          <tr *ngFor=\"let order of orders\">\n            <td>{{ order.orderTrackingNumber }}</td>\n            <td>{{ order.totalPrice | currency: \"USD\" }}</td>\n            <td>{{ order.totalQuantity }}</td>\n            <td>{{ order.dateCreated | date: \"medium\" }}</td>\n          </tr>\n        </table>\n      </div>\n\n      <div *ngIf=\"loading\" class=\"alert alert-warning col-md-12\" role=\"alert\">\n        <h3>Loading orders. Please wait...</h3>\n      </div>\n\n      <div\n        *ngIf=\"orders.length == 0 && errorMsg.length == 0 && !loading\"\n        class=\"alert alert-warning col-md-12\"\n        role=\"alert\"\n      >\n        <h3>No orders found.</h3>\n      </div>\n\n      <div\n        *ngIf=\"orders.length == 0 && errorMsg.length > 0 && !loading\"\n        class=\"alert alert-danger col-md-12\"\n        role=\"alert\"\n      >\n        <h3>{{ errorMsg }}</h3>\n        <p>Log out and log back in if your browser has been idle for awhile.</p>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { OrderHistory } from 'src/app/common/order-history';\nimport { OrderHistoryService } from 'src/app/services/order-history.service';\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.css']\n})\nexport class OrdersComponent implements OnInit {\n\n  orders: Array<OrderHistory> = [];\n  storage: Storage = sessionStorage;\n  errorMsg: string = \"\";\n  loading:boolean = false;\n  \n\n  constructor(private orderHistoryService:OrderHistoryService) { }\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.handleOrderHistory();\n    this.orderHistoryService.errorMsg.subscribe(errMessage => {\n      this.errorMsg = errMessage;\n      this.loading = false;\n    })\n  }\n\n  handleOrderHistory() {\n    this.orderHistoryService.getOrderHistory().subscribe(orders => {\n      this.orders = orders;\n      this.loading = false;\n    })\n  }\n\n}\n","import {\n  AbstractControl,\n  FormControl,\n  ValidationErrors,\n  ValidatorFn,\n} from '@angular/forms';\n\nexport class Luv2ShopValidators {\n  static notOnlyWhitespace(control: FormControl): ValidationErrors | null {\n    if (typeof control.value === 'string') {\n      if (control.value && control.value.trim().length == 0) {\n        return { notOnlyWhitespace: true };\n      }\n    } else {\n      if (control.value === null) {\n        return { notOnlyWhitespace: true };\n      }\n    }\n\n    return null;\n  }\n\n  static notOnlyWhitespaceWithOneLetter(\n    control: FormControl\n  ): ValidationErrors | null {\n    if (!control.value) return null;\n\n    if (control.value.trim().length === 1) {\n      return { notOnlyWhitespaceWithOneLetter: true };\n    }\n\n    return null;\n  }\n\n  static notOnlyWhitespaceMultipleCharacters(max: number): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } | null => {\n      if (control.value.trim().length !== max) {\n        return { notOnlyWhitespaceMultipleCharacters: true };\n      }\n\n      return null;\n    };\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}